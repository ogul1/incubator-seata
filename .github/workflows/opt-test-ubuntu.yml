# job 1
#2.1.18.RELEASE,
#2.0.9.RELEASE,
# step 1
# step 2
# step 3
# step 4
## step 4.1: for Ubuntu and MacOS
# job 2
# step 1
# step 2
# step 3
# step 4
## step 4.1: for Ubuntu and MacOS
## step 4.2: for Windows
# job 3
#2.7.18         -Dspring-framework.version=5.3.31, # The maven-compiler-plugin will throw an error for an unknown reason.
#2.6.15         -Dspring-framework.version=5.3.27, # The maven-compiler-plugin will throw an error for an unknown reason.
#2.5.15         -Dspring-framework.version=5.3.27, # The maven-compiler-plugin will throw an error for an unknown reason.
#2.1.18.RELEASE,
#2.0.9.RELEASE,
# step 1
# step 2
# step 3

name: Modified test-ubuntu
jobs:
  test:
    name: test (${{ matrix.java }}, ${{ matrix.os }}, ${{ matrix.springboot }})
    services:
      redis:
        image: redis:7.2
        ports:
        - 6379:6379
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s
          --health-retries=3
      nacos:
        image: nacos/nacos-server:v2.4.2
        ports:
        - 8848:8848
        env:
          MODE: standalone
          SPRING_SECURITY_ENABLED: false
        options: --health-cmd="curl -f http://localhost:8848/nacos" --health-interval=10s
          --health-timeout=5s --health-retries=3 --health-start-period=30s
    runs-on: ${{ matrix.os }}-latest
    strategy:
      max-parallel: 3
      fail-fast: false
      matrix:
        java:
        - 8
        - 11
        - 17
        - 21
        os:
        - ubuntu
        springboot:
        - 2.7.18         -D spring-framework.version=5.3.31
        - 2.6.15         -D spring-framework.version=5.3.27
        - 2.5.15         -D spring-framework.version=5.3.27
        - 2.4.13         -D spring-framework.version=5.3.13
        - 2.3.12.RELEASE -D spring-framework.version=5.2.15.RELEASE
        - 2.2.13.RELEASE -D spring-framework.version=5.2.12.RELEASE
    steps:
    - name: Setup Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |-
        python -m pip install --upgrade pip
        pip install inotify
    - name: Run inotifywait
      run: |-
        python3 -c "
        import inotify.adapters
        import inotify.constants
        import os
        from datetime import datetime, timezone
        with open('/home/runner/inotifywait-log-test (${{ matrix.java }}, ${{ matrix.os }}, ${{ matrix.springboot }}).csv', 'w') as log_file:
          i = inotify.adapters.InotifyTree('/home/runner/work/incubator-seata/incubator-seata', inotify.constants.IN_CREATE | inotify.constants.IN_ACCESS)
          for event in i.event_gen(yield_nones=False):
            (_, type_names, path, filename) = event
            now = datetime.now(timezone.utc).strftime('%Y-%m-%dT%H:%M:%S.%f') + 'Z'
            events = ','.join(type_names)
            log_file.write(f'{now};{path};{filename};{events}\n')
            log_file.flush()
            os.fsync(log_file.fileno())
        " &
    - name: Checkout
      uses: actions/checkout@v3
    - run: touch optcd-3.txt
    - name: Use Python 3.x
      uses: actions/setup-python@v2
      with:
        python-version: '3.12'
    - run: touch optcd-4.txt
    - name: Set up Java JDK
      uses: actions/setup-java@v3.12.0
      with:
        distribution: zulu
        java-version: ${{ matrix.java }}
    - run: touch optcd-5.txt
    - name: Test with Maven on '${{ matrix.os }}' OS
      run: |-
        ./mvnw -T 4C clean test -P args-for-client-test -Dspring-boot.version=${{ matrix.springboot }} -e -B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn;
    - run: touch optcd-6.txt
    - name: Upload inotifywait logs
      uses: actions/upload-artifact@v4
      with:
        name: inotifywait-test (${{ matrix.java }}, ${{ matrix.os }}, ${{ matrix.springboot
          }})
        path: /home/runner/inotifywait-log-test (${{ matrix.java }}, ${{ matrix.os
          }}, ${{ matrix.springboot }}).csv
  test-springboot3x:
    name: test-springboot3x (${{ matrix.java }}, ${{ matrix.os }}, ${{ matrix.springboot
      }})
    services:
      redis:
        image: redis:7.2
        ports:
        - 6379:6379
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s
          --health-retries=3
      nacos:
        image: nacos/nacos-server:v2.4.2
        ports:
        - 8848:8848
        env:
          MODE: standalone
          SPRING_SECURITY_ENABLED: false
        options: --health-cmd="curl -f http://localhost:8848/nacos" --health-interval=10s
          --health-timeout=5s --health-retries=3 --health-start-period=30s
    runs-on: ${{ matrix.os }}-latest
    strategy:
      max-parallel: 3
      fail-fast: false
      matrix:
        java:
        - 17
        - 21
        os:
        - ubuntu
        springboot:
        - 3.2.0  -D spring-framework.version=6.1.1
        - 3.1.6  -D spring-framework.version=6.0.14
        - 3.0.13 -D spring-framework.version=6.0.14
    steps:
    - name: Setup Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |-
        python -m pip install --upgrade pip
        pip install inotify
    - name: Run inotifywait
      run: |-
        python3 -c "
        import inotify.adapters
        import inotify.constants
        import os
        from datetime import datetime, timezone
        with open('/home/runner/inotifywait-log-test-springboot3x (${{ matrix.java }}, ${{ matrix.os }}, ${{ matrix.springboot }}).csv', 'w') as log_file:
          i = inotify.adapters.InotifyTree('/home/runner/work/incubator-seata/incubator-seata', inotify.constants.IN_CREATE | inotify.constants.IN_ACCESS)
          for event in i.event_gen(yield_nones=False):
            (_, type_names, path, filename) = event
            now = datetime.now(timezone.utc).strftime('%Y-%m-%dT%H:%M:%S.%f') + 'Z'
            events = ','.join(type_names)
            log_file.write(f'{now};{path};{filename};{events}\n')
            log_file.flush()
            os.fsync(log_file.fileno())
        " &
    - name: Checkout
      uses: actions/checkout@v3
    - run: touch optcd-3.txt
    - name: Use Python 3.x
      uses: actions/setup-python@v2
      with:
        python-version: '3.12'
    - run: touch optcd-4.txt
    - name: Set up Java JDK
      uses: actions/setup-java@v3.12.0
      with:
        distribution: zulu
        java-version: ${{ matrix.java }}
    - run: touch optcd-5.txt
    - name: Test with Maven on '${{ matrix.os }}' OS
      run: |-
        ./mvnw -T 4C clean test -P args-for-client-test -Dspring-boot.version=${{ matrix.springboot }} -e -B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn;
    - run: touch optcd-6.txt
    - name: Build with Maven on 'windows' OS (Skip tests)
      run: |-
        ./mvnw.cmd -version;
        ./mvnw.cmd clean install -P args-for-client-test -DskipTests -D spring-boot.version=${{ matrix.springboot }} -e -B -D org.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn;
    - run: touch optcd-7.txt
    - name: Upload inotifywait logs
      uses: actions/upload-artifact@v4
      with:
        name: inotifywait-test-springboot3x (${{ matrix.java }}, ${{ matrix.os }},
          ${{ matrix.springboot }})
        path: /home/runner/inotifywait-log-test-springboot3x (${{ matrix.java }},
          ${{ matrix.os }}, ${{ matrix.springboot }}).csv
  test-arm64:
    name: test-arm64 (${{ matrix.springboot }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        springboot:
        - 2.4.13         -Dspring-framework.version=5.3.13
        - 2.3.12.RELEASE -Dspring-framework.version=5.2.15.RELEASE
        - 2.2.13.RELEASE -Dspring-framework.version=5.2.12.RELEASE
    steps:
    - name: Setup Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |-
        python -m pip install --upgrade pip
        pip install inotify
    - name: Run inotifywait
      run: |-
        python3 -c "
        import inotify.adapters
        import inotify.constants
        import os
        from datetime import datetime, timezone
        with open('/home/runner/inotifywait-log-test-arm64 (${{ matrix.springboot }}).csv', 'w') as log_file:
          i = inotify.adapters.InotifyTree('/home/runner/work/incubator-seata/incubator-seata', inotify.constants.IN_CREATE | inotify.constants.IN_ACCESS)
          for event in i.event_gen(yield_nones=False):
            (_, type_names, path, filename) = event
            now = datetime.now(timezone.utc).strftime('%Y-%m-%dT%H:%M:%S.%f') + 'Z'
            events = ','.join(type_names)
            log_file.write(f'{now};{path};{filename};{events}\n')
            log_file.flush()
            os.fsync(log_file.fileno())
        " &
    - name: Checkout
      uses: actions/checkout@v3
    - run: touch optcd-3.txt
    - name: Set up QEMU
      id: qemu
      uses: docker/setup-qemu-action@v3
    - run: touch optcd-4.txt
    - name: Build with Maven on 'arm64v8/ubuntu:20.04' OS (Skip tests)
      run: |-
        docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
          arm64v8/ubuntu:20.04 \
          bash -exc 'apt-get update -y && \
                     apt-get install maven -y && \
                     apt-get install -y python3 python3-pip python3-distutils && \
                     apt-get install -y build-essential && \
                     mvn -version && \
                     mvn -T 4C clean install \
                         -Dspring-boot.version=${{ matrix.springboot }} \
                         -Prelease-seata \
                         -DskipTests \
                         -e -B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn'
    - run: touch optcd-5.txt
    - name: Upload inotifywait logs
      uses: actions/upload-artifact@v4
      with:
        name: inotifywait-test-arm64 (${{ matrix.springboot }})
        path: /home/runner/inotifywait-log-test-arm64 (${{ matrix.springboot }}).csv
'on':
- push
- workflow_dispatch
